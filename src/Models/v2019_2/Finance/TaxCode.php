<?php

namespace Spinen\ConnectWise\Models\v2019_2\Finance;

use Spinen\ConnectWise\Support\Model;

class TaxCode extends Model
{
    /**
     * Properties that need to be casts to a specific object or type
     *
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'identifier' => 'string',
        'description' => 'string',
        'invoiceCaption' => 'string',
        'effectiveDate' => 'carbon',
        'defaultFlag' => 'boolean',
        'displayOnInvoiceFlag' => 'boolean',
        'canadaCalculateGSTFlag' => 'boolean',
        'cancelDate' => 'carbon',
        'levelOneRate' => 'double',
        'levelOneRateType' => 'string',
        'levelOneTaxableMax' => 'double',
        'levelOneCaption' => 'string',
        'levelOneTaxCodeXref' => 'string',
        'levelOneAgencyXref' => 'string',
        'levelOneServicesFlag' => 'boolean',
        'levelOneExpensesFlag' => 'boolean',
        'levelOneProductsFlag' => 'boolean',
        'levelOneApplySingleUnitFlag' => 'boolean',
        'levelOneApplySingleUnitMin' => 'double',
        'levelOneApplySingleUnitMax' => 'double',
        'levelTwoRate' => 'double',
        'levelTwoRateType' => 'string',
        'levelTwoTaxableMax' => 'double',
        'levelTwoCaption' => 'string',
        'levelTwoTaxCodeXref' => 'string',
        'levelTwoAgencyXref' => 'string',
        'levelTwoServicesFlag' => 'boolean',
        'levelTwoExpensesFlag' => 'boolean',
        'levelTwoProductsFlag' => 'boolean',
        'levelTwoApplySingleUnitFlag' => 'boolean',
        'levelTwoApplySingleUnitMin' => 'double',
        'levelTwoApplySingleUnitMax' => 'double',
        'levelThreeRate' => 'double',
        'levelThreeRateType' => 'string',
        'levelThreeTaxableMax' => 'double',
        'levelThreeCaption' => 'string',
        'levelThreeTaxCodeXref' => 'string',
        'levelThreeAgencyXref' => 'string',
        'levelThreeServicesFlag' => 'boolean',
        'levelThreeExpensesFlag' => 'boolean',
        'levelThreeProductsFlag' => 'boolean',
        'levelThreeApplySingleUnitFlag' => 'boolean',
        'levelThreeApplySingleUnitMin' => 'double',
        'levelThreeApplySingleUnitMax' => 'double',
        'levelFourRate' => 'double',
        'levelFourRateType' => 'string',
        'levelFourTaxableMax' => 'double',
        'levelFourCaption' => 'string',
        'levelFourTaxCodeXref' => 'string',
        'levelFourAgencyXref' => 'string',
        'levelFourServicesFlag' => 'boolean',
        'levelFourExpensesFlag' => 'boolean',
        'levelFourProductsFlag' => 'boolean',
        'levelFourApplySingleUnitFlag' => 'boolean',
        'levelFourApplySingleUnitMin' => 'double',
        'levelFourApplySingleUnitMax' => 'double',
        'levelFiveRate' => 'double',
        'levelFiveRateType' => 'string',
        'levelFiveTaxableMax' => 'double',
        'levelFiveCaption' => 'string',
        'levelFiveTaxCodeXref' => 'string',
        'levelFiveAgencyXref' => 'string',
        'levelFiveServicesFlag' => 'boolean',
        'levelFiveExpensesFlag' => 'boolean',
        'levelFiveProductsFlag' => 'boolean',
        'levelFiveApplySingleUnitFlag' => 'boolean',
        'levelFiveApplySingleUnitMin' => 'double',
        'levelFiveApplySingleUnitMax' => 'double',
        'levelSixRate' => 'double',
        'levelSixRateType' => 'string',
        'levelSixTaxableMax' => 'double',
        'levelSixCaption' => 'string',
        'levelSixTaxCodeXref' => 'string',
        'levelSixAgencyXref' => 'string',
        'levelSixServicesFlag' => 'boolean',
        'levelSixExpensesFlag' => 'boolean',
        'levelSixProductsFlag' => 'boolean',
        'levelSixApplySingleUnitFlag' => 'boolean',
        'levelSixApplySingleUnitMin' => 'double',
        'levelSixApplySingleUnitMax' => 'double',
        'workRoleIds' => 'array',
        'addAllWorkRoles' => 'boolean',
        'removeAllWorkRoles' => 'boolean',
        'expenseTypeIds' => 'array',
        'addAllExpenseTypes' => 'boolean',
        'removeAllExpenseTypes' => 'boolean',
        'productTypeIds' => 'array',
        'addAllProductTypes' => 'boolean',
        'removeAllProductTypes' => 'boolean',
    ];
}
